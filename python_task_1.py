# -*- coding: utf-8 -*-
"""assignment_anshuman.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17R5QQwsMdaUnZBKVhm89OmS456e93DZ5
"""

import pandas as pd
import numpy as np

data_1 = pd.read_csv('/content/drive/MyDrive/MapUp-Data-Assessment-F-main/MapUp-Data-Assessment-F-main/datasets/dataset-1.csv')

data_1

def generate_car_matrix(data_1):
  new_dataframe = pd.DataFrame(data=data_1["car"],index=data_1["id_1"],columns=data_1["id_2"])
  new_dataframe.groupby(['id_1'], axis=1).sum()
  for i in range()
  return new_dataframe

def get_type_count(data_1):
  data_1['car_type'] = ''
  for i in range(len(data_1['car'])):
    if(data_1['car'][i] <= 15):
      data_1['car_type'][i] = 'low'
    elif(data_1['car'][i] >15 and data_1['car'][i] <=25):
      data_1['car_type'][i] = 'medium'
    elif(data_1['car'][i] > 25):
      data_1['car_type'][i] = 'high'
    else:
      data_1['car_type'][i] = 'unknown'
  x = data_1.value_counts('car_type')
  dic = x.to_dict()
  return dic

def get_bus_indexes(data_1):
  bus_indexes = []
  mean = data_1['bus'].mean()
  data = data_1['bus'] > 2*mean
  for i in range(len(data_1['bus'])):
    if(data[i] == True):
      bus_indexes.append(i)
  return bus_indexes

def filter_routes(data_1):
  route_indexes = []
  avg = data_1['truck'].mean()
  data = data_1['truck'] > avg + 7
  for i in range(len(data_1['bus'])):
    if(data[i] == True):
      route_indexes.append(data_1['route'][i])
  return np.sort(route_indexes)